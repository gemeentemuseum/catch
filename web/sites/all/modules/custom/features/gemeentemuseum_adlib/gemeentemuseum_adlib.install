<?php

/**
 * @file
 * Install, update and uninstall functions for the Gemeentemuseum adlib content type. module.
 */

/**
 * Update field lenghts.
 */
function gemeentemuseum_adlib_update_7000(&$sandbox) {
  $messages = array();
  // Set the fields for which the length should be altered.
  $fields = array(
    'field_adlib_creation_present_en',
    'field_adlib_credit_line_en',
    'field_adlib_dim_presentation_en',
  );
  foreach ($fields as $field) {
    gemeentemuseum_adlib_change_text_field_max_length($field, 2048);
    // Set the message.
    $messages[] = t('Updated field length of field @field', array('@field' => $field));
  }

  return implode('<br />', $messages);
}

/**
 * Alter the field length.
 *
 * @param $field_name
 * @param $new_length
 */
function gemeentemuseum_adlib_change_text_field_max_length($field_name, $new_length) {
  $field_table = 'field_data_' . $field_name;
  $field_revision_table = 'field_revision_' . $field_name;
  $field_column = $field_name . '_value';

  // Alter value field length in fields table
  db_query("ALTER TABLE `{$field_table}` CHANGE `{$field_column}` `{$field_column}` VARCHAR( {$new_length} )");
  // Alter value field length in fields revision table
  db_query("ALTER TABLE `{$field_revision_table}` CHANGE `{$field_column}` `{$field_column}` VARCHAR( {$new_length} )");

  // Update field config with new max length
  $result = db_query("SELECT CAST(`data` AS CHAR(10000) CHARACTER SET utf8) FROM `field_config` WHERE field_name = '{$field_name}'");
  $config = $result->fetchField();
  $config_array = unserialize($config);
  $config_array['settings']['max_length'] = $new_length;
  $config = serialize($config_array);
  db_update('field_config')
    ->fields(array('data' => $config))
    ->condition('field_name', $field_name)
    ->execute();
}